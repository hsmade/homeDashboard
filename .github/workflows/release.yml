# This is a basic workflow to help you get started with Actions

name: release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    tags:
      - 'v*'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        channel: 'beta'

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(grep "^version:" pubspec.yaml | cut -d' ' -f2)

    - name: update deps
      run: flutter pub get

    - name: build apk
      run: flutter build apk --build-name=${{ steps.get_version.outputs.VERSION }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path:  build/app/outputs/apk/release/app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/vnd.android.package-archive

  release:
    runs-on: ubuntu-18.04
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
    steps:
     - uses: actions/checkout@v1.0.0

     - name: Get the version
       id: get_version
       run: echo ::set-output name=VERSION::$(grep "^version:" pubspec.yaml | cut -d' ' -f2)

     - name: Create new Sentry release and deploy
       run: |
         curl -sL https://sentry.io/get-cli/ | bash
         sentry-cli releases new -p ${SENTRY_ORG} ${{ steps.get_version.outputs.VERSION }}
         sentry-cli releases set-commits --commit hsmade/homeDashboard@$v{{ steps.get_version.outputs.VERSION }} ${{ steps.get_version.outputs.VERSION }}
